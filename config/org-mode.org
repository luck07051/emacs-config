#+TITLE: Org Mode Config
#+AUTHOR: uima
#+DESCRIPTION: Config for Org Mode

* TOC                                                                   :TOC:
- [[#org][Org]]
- [[#org-roam][Org Roam]]
  - [[#roam-ui][Roam UI]]
- [[#capture-templete][Capture Templete]]
- [[#babel][Babel]]
- [[#bullets][Bullets]]
- [[#toc][Toc]]
- [[#show-hidden-element][Show Hidden Element]]
- [[#insert-links-with-title][Insert Links with Title]]
- [[#export][Export]]
- [[#archive-doned-to-do-list][Archive Doned To-do list]]
- [[#automatically-done-when-all-children-are-done][Automatically DONE When All Children Are Done]]

* Org
#+begin_src emacs-lisp
(use-package org
  :bind
  (("C-c a" . org-agenda)
   ("C-c c" . org-capture)
   :map org-mode-map
   ("C-c l" . org-store-link)
   ("C-c k" . org-cliplink)
   ("C-c s" . org-edit-src-code)
   )
  :hook
  (org-mode . org-indent-mode)
  :custom
  (org-agenda-files (directory-files-recursively "~/org/" "\\.org$"))

  (org-ellipsis " ▾")                    ;; the character for folding indicator
  (org-hide-emphasis-markers t)          ;; hide emphasis markers
  (org-startup-with-inline-images t)     ;; show inline images
  (org-src-preserve-indentation t)       ;; no leading indent in src block
  (org-src-window-setup 'current-window) ;; edit src block in current window
  (org-confirm-babel-evaluate nil)       ;; no confirm when evaluate

  ;; TODO
  (org-todo-keywords
   '((sequence "TODO(t)" "IN-PROGRESS(i!)" "WAITING(w@)" "|" "DONE(d)")))
  (org-log-done 'time)  ;; log time when done
  (org-todo-keyword-faces
   '(("TODO"        . (:foreground "GoldenRod"  :weight bold))
     ("IN-PROGRESS" . (:foreground "Cyan"       :weight bold))
     ("WAITING"     . (:foreground "DarkOrange" :weight bold))
     ("DONE"        . (:foreground "LimeGreen"  :weight bold))
     ))

  ;; TAG
  (org-tag-alist '((:startgroup . nil)
                   (:endgroup . nil)))
  (org-tag-faces
   '(;;("meeting"   . (:foreground "yellow1"       :weight bold))
     ))
  )
#+end_src

* Org Roam
#+begin_src emacs-lisp
(use-package org-roam
  :custom
  (org-roam-directory (file-truename "~/org"))
  (org-roam-completion-everywhere t)
  (org-roam-node-display-template
   (concat "${title:*} " (propertize "${tags:15}" 'face 'org-tag)))
  (org-roam-capture-templates
   '(("d" "default" plain "\n%?"
      :target (file+head
               "%<%Y%m%d%H%M%S>-${slug}.org"
               "#+title: ${title}\n#+data: %U\n#+filetags:\n")
      :unnarrowed t)
     ))
  :bind (("C-c l" . org-roam-buffer-toggle)
         ("C-c f" . org-roam-node-find)
         ("C-c i" . org-roam-node-insert)
         ("C-c n c" . org-roam-capture)
         :map org-mode-map
         ("C-M-i"   . completion-at-point))
  :config
  (org-roam-setup))
#+end_src

** Roam UI
#+begin_src emacs-lisp
;; Dependence
(use-package websocket)
(use-package simple-httpd)
(use-package f)

(use-package org-roam-ui
  :bind (("C-c n g" . org-roam-ui-open))
  )
#+end_src

* Capture Templete
#+begin_src emacs-lisp
(setq org-capture-templates
      '(("n" "Add Note to Inbox"
         entry (file "~/org/inbox.org")
         "* %?"
         :empty-lines-before 1)
        ("t" "Add Todo to Inbox"
         entry (file "~/org/inbox.org")
         "* TODO [#B] %?\n:CREATED: %T\n"
         :empty-lines-before 1)
        ("l" "Cap with Link")
        ("ln" "Add Note with File Link to Inbox"
         entry (file "~/org/inbox.org")
         "* %?\n%a\n"
         :empty-lines-before 1)
        ("lt" "Add Todo with File Link to Inbox"
         entry (file "~/org/inbox.org")
         "* TODO [#B] %?\n:CREATED: %T\n%a\n"
         :empty-lines-before 1)
        ))
#+end_src

* Babel
#+begin_src emacs-lisp
(org-babel-do-load-languages
 'org-babel-load-languages
 '((emacs-lisp . t)
   (shell . t)
   (python . t)
   (awk . t)
   (C . t)
   ))
#+end_src

* Bullets
#+begin_src emacs-lisp
(use-package org-bullets
  :hook (org-mode . org-bullets-mode)
  :custom
  (org-bullets-bullet-list '("●" "○")))
#+end_src

* Toc
#+begin_src emacs-lisp
(use-package toc-org
  :hook (org-mode . toc-org-mode))
#+end_src

* Show Hidden Element
#+begin_src emacs-lisp
(use-package org-appear
  :hook (org-mode . org-appear-mode)
  :custom
  (org-appear-autolinks 1))
;; (setq org-appear-trigger 'manual)
;; (add-hook 'org-mode-hook
;; 	  (lambda ()
;; 	    (add-hook 'evil-insert-state-entry-hook
;; 		      #'org-appear-manual-start nil t)
;; 	    (add-hook 'evil-insert-state-exit-hook
;; 		      #'org-appear-manual-stop nil t))))
#+end_src

* Insert Links with Title
#+begin_src emacs-lisp
(use-package org-cliplink
  :after org)
#+end_src

* TODO Export
[[https://search.uima.duckdns.org/search?q=emacs%20org%20mode%20export%20unable%20resolve%20link&language=auto&time_range=&safesearch=0&categories=general][searching]]

* TODO Archive Doned To-do list
A key press to move doned item to, say `archive.org` file.

* TODO Automatically DONE When All Children Are Done
[[https://orgmode.org/manual/Breaking-Down-Tasks.html#Breaking-Down-Tasks][manual for this]]
